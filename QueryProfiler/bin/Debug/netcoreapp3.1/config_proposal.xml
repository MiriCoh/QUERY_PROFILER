<?xml version="1.0"?>
<ProposalsOptimizations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<ProposalScheme>
		<sourceOperator>Contains</sourceOperator>
		<ProposalOptimalOperator>contains_cs</ProposalOptimalOperator>
		<ProposalReason>Use contains_cs instead of contains because the value with a cs suffix is case sensitive so the search will be more focused and faster than contains</ProposalReason>
	</ProposalScheme>
	<ProposalScheme>
		<sourceOperator>Contains</sourceOperator>
		<ProposalOptimalOperator>has</ProposalOptimalOperator>
		<ProposalReason>When looking for full tokens, has works better, since it doesn't look for substrings</ProposalReason>
	</ProposalScheme>
	<ProposalScheme>
		<sourceOperator>Has</sourceOperator>
		<ProposalOptimalOperator>has_cs</ProposalOptimalOperator>
		<ProposalReason>Use has instead of has_cs because the value with the suffix cs is case sensitive so the search will be more focused and faster than has</ProposalReason>
	</ProposalScheme>
	<ProposalScheme>
		<sourceOperator>In~</sourceOperator>
		<ProposalOptimalOperator>in</ProposalOptimalOperator>
		<ProposalReason>Use in~ instead of in because in~ is case sensitive, so the search is more focused and faster</ProposalReason>
	</ProposalScheme>
	<ProposalScheme>
		<sourceOperator>Lookup</sourceOperator>
		<ProposalOptimalOperator>lookup kind=leftouter</ProposalOptimalOperator>
		<ProposalReason>Use lookup kind=leftouter instead of lookup because kind=leftouter put Null rows in the left table that do not have a match in the right table will be omitted instead of being</ProposalReason>
	</ProposalScheme>
	<ProposalScheme>
		<sourceOperator>Join</sourceOperator>
		<ProposalOptimalOperator>lookup</ProposalOptimalOperator>
		<ProposalReason>Use lookup instead of join because join needs more memory so lookup will be faster</ProposalReason>
	</ProposalScheme>
</ProposalsOptimizations>


